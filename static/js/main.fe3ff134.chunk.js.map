{"version":3,"sources":["logo.svg","tweets/components.js","lookup/components.js","App.js","index.js"],"names":["module","exports","TweetsConponent","props","textAreaRef","React","createRef","useState","newTweets","setNewtweets","className","onSubmit","event","preventDefault","newValue","current","value","tempNewTweets","unshift","content","id","likes","ref","required","type","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","useEffect","final","concat","length","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","e","send","loadTweets","alert","map","item","index","Tweet","tweet","key","ActionBtn","action","setLikes","userLike","setuserLike","actionDisplay","display","onClick","App","src","logo","alt","href","target","rel","appEl","document","getElementById","ReactDOM","render","tweeetEl"],"mappings":"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","file":"static/js/main.fe3ff134.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useEffect, useState} from 'react'\nimport {loadTweets} from '../lookup'\n\n\nexport function TweetsConponent(props) {\n    const textAreaRef = React.createRef()\n    const [newTweets, setNewtweets] = useState([])\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newValue = textAreaRef.current.value\n        let tempNewTweets = [...newTweets]\n        tempNewTweets.unshift({\n            content: newValue,\n            id: 44444,\n            likes: 0\n        })\n        setNewtweets(tempNewTweets)\n        textAreaRef.current.value = ''\n    }\n\n    return <div className={props.className}>\n        <div className=\"col-12 mb-3\">\n            <form onSubmit={handleSubmit}>\n                <textarea ref={textAreaRef} required={true} className=\"form-control\">\n\n                </textarea>\n                <button type=\"submit\" className=\"btn btn-primary my-3\">Tweet</button>\n            </form>\n        </div>\n        <TweetsList newTweets={newTweets}/>\n    </div>\n}\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    useEffect(() => {\n        let final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length) {\n            setTweets(final)\n        }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n      const myCallback = (response, status)=> {\n        if (status === 200) {\n            setTweetsInit(response)\n        } else {\n            alert('Was an error')\n        }\n      }\n      loadTweets(myCallback)\n    }, [])\n  \n    return tweets.map((item, index) => {\n      return <Tweet tweet={item} className=\"bg-white text-dark\" key={`${index}-{item.id}`}/>\n    })\n  }\n\nexport function ActionBtn(props) {\n    const {tweet, action} = props \n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\n    const [userLike, setuserLike] = useState(tweet.userLike === true ? true : false)\n    const actionDisplay = action.display ? action.display : 'Action'\n    const className = props.className ? props.className : 'btn btn-primary'\n    const handelClick = (event) => {\n        event.preventDefault()\n        if (action.type === 'like') {\n            if (userLike === true) {\n                setLikes(likes - 1)\n                setuserLike(false)\n            } else {\n                setLikes(likes + 1)\n                setuserLike(true)\n            }\n        } \n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handelClick}>{display}</button> \n}\n  \nexport function Tweet(props) {\nconst {tweet} = props\nconst className = props.className ? props.className : 'col-10 mx-auto col-md-6'\nreturn <div className={className}>\n    <p>{tweet.id} - {tweet.content}</p>\n    <div className=\"btn btn-group\">\n    <ActionBtn tweet={tweet} action={{type: \"like\", display:\"Like\"}}/>\n    <ActionBtn tweet={tweet} action={{type: \"unlike\", display:\"Unlike\"}}/>\n    <ActionBtn tweet={tweet} action={{type: \"retweet\", display:\"Retweet\"}}/>\n    </div>\n</div>\n}","export function loadTweets(callback) { \n    const xhr = new XMLHttpRequest()\n    const method = 'GET'\n    const url = \"http://localhost:8000/api/tweets/\"\n    const responseType = 'json'\n  \n    xhr.responseType = responseType\n    xhr.open(method, url)\n    xhr.onload = function() {\n      callback(xhr.response, xhr.status)\n    }\n    xhr.onerror = function (e) {\n      callback({\"message\": \"The request was an error\"}, 400)\n    }\n    xhr.send()\n}","import React from 'react';\nimport logo from './logo.svg';\nimport {TweetsConponent} from './tweets'\nimport './App.css';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsConponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TweetsConponent} from './tweets'\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\n\nconst tweeetEl = document.getElementById('tweetme-2')\nif (tweeetEl) {\n  ReactDOM.render(<TweetsConponent />, tweeetEl);\n}"],"sourceRoot":""}